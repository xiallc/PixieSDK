name: Github Actions

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  OPTIONS: -DBUILD_SDK=ON -DBUILD_TESTS=ON
  BROADCOM_SDK_ZIP: https://github.com/xiallc/broadcom_pci_pcie_sdk/releases/download/8.23/xia-broadcom-8.23-64bit-ci-package.zip

jobs:
  build-Windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
      - uses: ilammy/msvc-dev-cmd@v1.12.1
        with:
            arch: amd64

      - name: PLX
        run: |
          $Env:ORIG_DIR="$pwd"
          Invoke-WebRequest -Uri $Env:BROADCOM_SDK_ZIP -OutFile broadcom_sdk.zip
          Expand-Archive -Path broadcom_sdk.zip
          $Env:PLX_SDK_DIR="$pwd\broadcom_sdk\xia\ci\broadcom\plx\8.23"
          echo "PLX_SDK_DIR: $Env:PLX_SDK_DIR"
          echo "PLX_SDK_DIR=$Env:PLX_SDK_DIR" >> $Env:GITHUB_ENV
          echo ";$Env:PLX_SDK_DIR\PlxApi\Release\" >> $Env:GITHUB_PATH
  
      - name: Configure
        run: |
          mkdir build
          cd build
          cmake ..\ $Env:OPTIONS

      - name: Build
        run: | 
          cmake --build $Env:GITHUB_WORKSPACE/build
      
      - name: Test
        run: |
          & "$Env:GITHUB_WORKSPACE\build\tests\unit\sdk\Debug\pixie_sdk_unit_test_runner.exe"
          & "$Env:GITHUB_WORKSPACE\build\tests\integration\Debug\pixie_sdk_integration_test_runner.exe"

  build-Linux:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: PLX
        run: |
          export ORIG_DIR=${PWD}
          git clone https://github.com/xiallc/broadcom_pci_pcie_sdk.git
          cd broadcom_pci_pcie_sdk
          export PLX_SDK_DIR=${PWD}
          echo "PLX_SDK_DIR=${PLX_SDK_DIR}" >> ${GITHUB_ENV}
          make -C ${PLX_SDK_DIR}/PlxApi PLX_NO_CLEAR_SCREEN=1
          test -e ./PlxApi/Library/PlxApi.a
          cd ${ORIG_DIR}

      - name: Configure
        run: |
          mkdir build
          cd build
          cmake ../ ${{env.OPTIONS}}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: |
          ./tests/unit/sdk/pixie_sdk_unit_test_runner
          ./tests/integration/pixie_sdk_integration_test_runner
